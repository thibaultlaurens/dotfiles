[user]
	name = Thibault Laurens
	email = thibault.laurens@pm.me
	signingKey = 87CE04F5DF17DC3C

[commit]
	gpgsign = true

# Include dedicated config related to work
[includeIf "gitdir:~/git/work/"]
	path = .gitconfig.work

[core]
	# Prevent CRLF to be written into the repo
	autocrlf = input
	# Path to the global .gitignore file
	excludesfile = ~/.gitignore
	# Text viewer for git commands
	pager = diff-so-fancy | less --tabs=4 -RFX

# Set default remote for master branches
[branch "master"]
    remote = origin
    merge = refs/heads/master

# Always access github repos via SSH
[url "ssh://git@github.com/"]
	insteadOf = https://github.com/

[status]
	# Show untracked files, directories and files in untracked directorie
	showUntrackedFiles = all

[pull]
	# Keep local commits on top of the tree
	rebase = true
	
[rebase]
	# Stash and pop uncommitted changes on rebase
	autoStash = true

# Maintain a 1-1 mapping to upstream refs and tags
[fetch]
	prune = true
	pruneTags = true

# Custom colors for branches
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

# Custom colors for diff 
[color "diff"]
	frag = blue bold
	meta = yellow bold
	old = red
	new = green

[help]
	# Correct and execute mistyped commands
	autocorrect = 1

[alias]
	# List all the git aliases
	aliases = !sh -c 'git config --get-regexp '^alias\\.' | sed -e s/^alias\\.// -e s/\\ /\\ =\\ / | sort'
	
	# Add the currently staged files to the latest commit
	amend = commit --amend --reuse-message=HEAD

	# Show a list of the remote branches authors name, email and creation date
	authors = "! for branch in `git branch -r | grep -v /HEAD`; \
	do echo \\* $branch - `git show --color --date=format:'%d/%m/%Y' --pretty=format:\"by %C(bold blue)%an%C(reset) <%ae> %C(bold yellow)%ad (%ar)%C(reset)\" $branch | \
	head -n 1` ; done"

	# List remote-tracking and local branches
	branches = branch --all -vv

	# Show a condensed summary of the changes from HEAD
	changes = diff HEAD --compact-summary

	# Remove untracked and ignored files interactively 
	cleanup = clean -xfdi

	# List top contributors by number of commits (10 by default)
	contributors = "!f() { git shortlog --numbered --summary --email --no-merges | head -n${1:-10}; }; f"

	# Count the number of lines that matched a given pattern in tracked files
	count = grep -c
	
	# Show changes not added to the index
	df = diff --patch-with-stat

	# Show all the changes since the last commit
	dfh = df HEAD

	# Show changes in the index
	dfs = df --staged

	# Filter the commit logs messages with the provided string
	filter = "!f() { git logs --grep=$1; }; f"

	# Switch to a given branch, creates it if necessary
	go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout -f \"$1\"; }; f"

	# Show the commit logs with stats
	logs = log --stat --full-history --date=format:'%H:%M:%S %d/%m/%Y' --pretty=format:'%C(bold white)%h%C(auto)%d %C(reset)by %C(bold blue)%cn%C(reset) at %C(bold yellow)%ad%C(reset)%n %s'

	# Show commits created by the last command 
	news = !sh -c 'git logs $1@{1}..$1@{0} HEAD'

	# Push HEAD on the origin remote
	pu = push origin HEAD

	# Revert the last commit and put its changes in the index
	resets = reset --soft HEAD^

	# Remove all local branches except master and the current one
	rmlbs = "!f() { git branch | grep -v "master" | grep -v "^*" | xargs git branch -d; }; f"

	# Remove a remote branch
	rmrb = "push origin -d"

	# Grep the given pattern in tracked files with line numbers and context
	search = grep -n -C 1

	# Show a short status summary with branch info
	ss = status -sb
	
	# Stash the working directory, the index and the untracked files
	stash-all = stash save --include-untracked

	# Show a graph of the commit logs
	tree = log --graph --full-history --pretty=format:'%C(red)%h%C(reset) -%C(yellow)%d%C(reset) %s %C(green)(%cr) %C(bold blue)[%an]%C(reset)'

	# Remove a file from the index
	unstage = reset HEAD --

	# Quick and dirty "wip" commit
	wip = "!f() { git commit -m "wip" . && git push origin HEAD; }; f"
